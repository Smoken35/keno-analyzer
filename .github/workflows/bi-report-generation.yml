name: BI Tools Validation

on:
  push:
    branches: [ main ]
    paths:
      - 'bi_integration/**'
      - 'monitoring/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'bi_integration/**'
      - 'monitoring/**'
  workflow_dispatch:  # Manual trigger

jobs:
  validate-bi-tools:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Metrics Exporter Tests
        run: |
          cd bi_integration
          pytest --cov=. --cov-report=xml

      - name: Validate Prometheus Config
        run: |
          cd monitoring
          docker run --rm -v $(pwd):/prometheus prom/prometheus:latest check config /prometheus/prometheus.yml

      - name: Validate AlertManager Config
        run: |
          cd monitoring/alertmanager
          docker run --rm -v $(pwd):/alertmanager prom/alertmanager:latest --config.file=/alertmanager/alertmanager.yml --check-config

      - name: Validate Grafana Dashboards
        run: |
          cd monitoring/grafana/provisioning/dashboards/json
          for dashboard in *.json; do
            if [ -f "$dashboard" ]; then
              echo "Validating dashboard: $dashboard"
              # Use jq to validate JSON format
              cat "$dashboard" | jq empty
              if [ $? -ne 0 ]; then
                echo "Invalid JSON in dashboard: $dashboard"
                exit 1
              fi
            fi
          done

      - name: Integration Test
        run: |
          cd scripts
          python validate_bi_tools_integration.py
          # Check the exit code
          if [ $? -ne 0 ]; then
            echo "BI Tools integration validation failed"
            exit 1
          fi

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            bi_integration/coverage.xml
            logs/*.log
          retention-days: 7

      - name: Report Test Results
        run: |
          echo "BI Tools Validation Results:"
          echo "- Metrics Exporter Test Coverage: $(grep -o 'line-rate="[0-9.]*"' bi_integration/coverage.xml | head -1 | grep -o '[0-9.]*')"
          echo "- Prometheus Config: Valid"
          echo "- AlertManager Config: Valid"
          echo "- Grafana Dashboards: Valid"
          echo "- Integration Tests: Passed"
