name: Update Coverage Badge

on:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed

jobs:
  update-badge:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download coverage report
      uses: actions/download-artifact@v3
      with:
        name: coverage-reports
        path: coverage_html
    
    - name: Generate coverage badge
      run: |
        coverage=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); print(f'{float(root.get(\"line-rate\")) * 100:.1f}')")
        
        # Determine badge color based on coverage
        if (( $(echo "$coverage > 90" | bc -l) )); then
          color="brightgreen"
        elif (( $(echo "$coverage > 75" | bc -l) )); then
          color="green"
        elif (( $(echo "$coverage > 50" | bc -l) )); then
          color="yellow"
        else
          color="red"
        fi
        
        # Create badge markdown
        echo "![Coverage](https://img.shields.io/badge/coverage-${coverage}%25-${color}.svg)" > coverage-badge.md
    
    - name: Update README
      run: |
        # Cross-platform sed replacement
        if grep -q "!\[Coverage\]" README.md; then
          sed -i '/!\[Coverage\]/c\![Coverage](https://img.shields.io/badge/coverage-${coverage}%25-${color}.svg)' README.md
        else
          echo -e "\n## Coverage\n\n$(cat coverage-badge.md)" >> README.md
        fi
    
    - name: Commit and push if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update coverage badge" && git push) 